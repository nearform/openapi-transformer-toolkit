import tap from 'tap'
import fs from 'fs-extra'
import { runCommand } from '../src/commands/oas2ts.js'
import { resolveFromPackageRoot } from '../src/utils/paths.js'

const TEST_DIRECTORY = resolveFromPackageRoot('test', 'temp')

const inputPath = './test/fixtures/openapi.yml'
const outputPath = './test/temp/types-from-oas'

tap.test('oas2ts', async t => {
  t.test('runCommand function', async t => {
    fs.ensureDirSync(TEST_DIRECTORY)

    await runCommand(inputPath, outputPath)

    const generatedFiles = fs.readdirSync(outputPath)
    t.match(generatedFiles, ['types.d.ts'], 'generates the expected TS files')

    const TypesFile = resolveFromPackageRoot(outputPath, 'types.d.ts')
    const generatedTypesFile = fs.readFileSync(TypesFile, 'utf-8')

    t.same(
      generatedTypesFile,
      `/* eslint-disable */
/**
 * This file was automatically generated by openapi-transformer-toolkit CLI/methods.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-transformer-toolkit CLI/methods to regenerate this file.
 */

export interface Address {
  street?: string;
  city?: string;
  state?: string;
  zip?: string;
  [k: string]: unknown;
}

export interface ApiResponse {
  code?: number;
  type?: string;
  message?: string;
  [k: string]: unknown;
}

export interface Category {
  id?: number;
  name?: string;
  [k: string]: unknown;
}

export interface Customer {
  id?: number;
  username?: string;
  address?: Address[];
  [k: string]: unknown;
}

export interface Order {
  id?: number;
  petId?: number;
  quantity?: number;
  shipDate?: string;
  /**
   * Order Status
   */
  status?: "placed" | "approved" | "delivered";
  complete?: boolean;
  [k: string]: unknown;
}

export interface Pet {
  id?: number;
  name: string;
  category?: Category;
  photoUrls: string[];
  tags?: Tag[];
  /**
   * pet status in the store
   */
  status?: "available" | "pending" | "sold";
  /**
   * example nullable value
   */
  nullableValue?: string | null;
  [k: string]: unknown;
}

export interface Tag {
  id?: number;
  name?: string;
  [k: string]: unknown;
}

export interface User {
  id?: number;
  username?: string;
  firstName?: string;
  lastName?: string;
  email?: string;
  password?: string;
  phone?: string;
  /**
   * User Status
   */
  userStatus?: number;
  [k: string]: unknown;
}
`,
      'types.d.ts is created correctly'
    )
  })
})
